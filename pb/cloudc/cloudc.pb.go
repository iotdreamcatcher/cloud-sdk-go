// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: cloudc.proto

package cloudc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModelWechatConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// note: 租户给自己的配置起的名字
	Key string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	// note: 租户的微信公众号信息
	GhId      string `protobuf:"bytes,3,opt,name=GhId,proto3" json:"GhId,omitempty"`
	AppID     string `protobuf:"bytes,4,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppSecret string `protobuf:"bytes,5,opt,name=AppSecret,proto3" json:"AppSecret,omitempty"`
	AppName   string `protobuf:"bytes,6,opt,name=AppName,proto3" json:"AppName,omitempty"`
}

func (x *ModelWechatConfig) Reset() {
	*x = ModelWechatConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelWechatConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelWechatConfig) ProtoMessage() {}

func (x *ModelWechatConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelWechatConfig.ProtoReflect.Descriptor instead.
func (*ModelWechatConfig) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{0}
}

func (x *ModelWechatConfig) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelWechatConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ModelWechatConfig) GetGhId() string {
	if x != nil {
		return x.GhId
	}
	return ""
}

func (x *ModelWechatConfig) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ModelWechatConfig) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *ModelWechatConfig) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type ModelDouyinConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// note: 租户给自己的配置起的名字
	Key string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	// note: 租户的抖音网站应用信息
	ClientKey    string `protobuf:"bytes,3,opt,name=ClientKey,proto3" json:"ClientKey,omitempty"`
	ClientSecret string `protobuf:"bytes,4,opt,name=ClientSecret,proto3" json:"ClientSecret,omitempty"`
	AppName      string `protobuf:"bytes,5,opt,name=AppName,proto3" json:"AppName,omitempty"`
}

func (x *ModelDouyinConfig) Reset() {
	*x = ModelDouyinConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelDouyinConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelDouyinConfig) ProtoMessage() {}

func (x *ModelDouyinConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelDouyinConfig.ProtoReflect.Descriptor instead.
func (*ModelDouyinConfig) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{1}
}

func (x *ModelDouyinConfig) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelDouyinConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ModelDouyinConfig) GetClientKey() string {
	if x != nil {
		return x.ClientKey
	}
	return ""
}

func (x *ModelDouyinConfig) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *ModelDouyinConfig) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type ModelSmsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Key       string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	AppID     string `protobuf:"bytes,3,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppSecret string `protobuf:"bytes,4,opt,name=AppSecret,proto3" json:"AppSecret,omitempty"`
	Endpoint  string `protobuf:"bytes,5,opt,name=Endpoint,proto3" json:"Endpoint,omitempty"`
	Template  string `protobuf:"bytes,6,opt,name=Template,proto3" json:"Template,omitempty"`
	Type      string `protobuf:"bytes,7,opt,name=Type,proto3" json:"Type,omitempty"`
	SignName  string `protobuf:"bytes,8,opt,name=SignName,proto3" json:"SignName,omitempty"`
	ParamsStr string `protobuf:"bytes,9,opt,name=ParamsStr,proto3" json:"ParamsStr,omitempty"`
}

func (x *ModelSmsConfig) Reset() {
	*x = ModelSmsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelSmsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelSmsConfig) ProtoMessage() {}

func (x *ModelSmsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelSmsConfig.ProtoReflect.Descriptor instead.
func (*ModelSmsConfig) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{2}
}

func (x *ModelSmsConfig) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelSmsConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ModelSmsConfig) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ModelSmsConfig) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *ModelSmsConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ModelSmsConfig) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *ModelSmsConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ModelSmsConfig) GetSignName() string {
	if x != nil {
		return x.SignName
	}
	return ""
}

func (x *ModelSmsConfig) GetParamsStr() string {
	if x != nil {
		return x.ParamsStr
	}
	return ""
}

type ModelEmsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Key        string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	SenderName string `protobuf:"bytes,3,opt,name=SenderName,proto3" json:"SenderName,omitempty"`
	SenderMail string `protobuf:"bytes,4,opt,name=SenderMail,proto3" json:"SenderMail,omitempty"`
	SenderPwd  string `protobuf:"bytes,5,opt,name=SenderPwd,proto3" json:"SenderPwd,omitempty"`
	Host       string `protobuf:"bytes,6,opt,name=Host,proto3" json:"Host,omitempty"`
	Port       string `protobuf:"bytes,7,opt,name=Port,proto3" json:"Port,omitempty"`
	Protocol   string `protobuf:"bytes,8,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
}

func (x *ModelEmsConfig) Reset() {
	*x = ModelEmsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelEmsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelEmsConfig) ProtoMessage() {}

func (x *ModelEmsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelEmsConfig.ProtoReflect.Descriptor instead.
func (*ModelEmsConfig) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{3}
}

func (x *ModelEmsConfig) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelEmsConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ModelEmsConfig) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *ModelEmsConfig) GetSenderMail() string {
	if x != nil {
		return x.SenderMail
	}
	return ""
}

func (x *ModelEmsConfig) GetSenderPwd() string {
	if x != nil {
		return x.SenderPwd
	}
	return ""
}

func (x *ModelEmsConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ModelEmsConfig) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *ModelEmsConfig) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type ModelOssConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Key       string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	AppID     string `protobuf:"bytes,3,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppSecret string `protobuf:"bytes,4,opt,name=AppSecret,proto3" json:"AppSecret,omitempty"`
	Endpoint  string `protobuf:"bytes,5,opt,name=Endpoint,proto3" json:"Endpoint,omitempty"`
	Prefix    string `protobuf:"bytes,6,opt,name=Prefix,proto3" json:"Prefix,omitempty"`
	Domain    string `protobuf:"bytes,7,opt,name=Domain,proto3" json:"Domain,omitempty"`
}

func (x *ModelOssConfig) Reset() {
	*x = ModelOssConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelOssConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelOssConfig) ProtoMessage() {}

func (x *ModelOssConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelOssConfig.ProtoReflect.Descriptor instead.
func (*ModelOssConfig) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{4}
}

func (x *ModelOssConfig) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelOssConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ModelOssConfig) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ModelOssConfig) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *ModelOssConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ModelOssConfig) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ModelOssConfig) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type ModelCaptchaConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Key       string  `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	DotCount  int64   `protobuf:"varint,3,opt,name=DotCount,proto3" json:"DotCount,omitempty"`
	MaxSkew   float64 `protobuf:"fixed64,4,opt,name=MaxSkew,proto3" json:"MaxSkew,omitempty"`
	KeyLong   int64   `protobuf:"varint,5,opt,name=KeyLong,proto3" json:"KeyLong,omitempty"`
	ImgWidth  int64   `protobuf:"varint,6,opt,name=ImgWidth,proto3" json:"ImgWidth,omitempty"`
	ImgHeight int64   `protobuf:"varint,7,opt,name=ImgHeight,proto3" json:"ImgHeight,omitempty"`
}

func (x *ModelCaptchaConfig) Reset() {
	*x = ModelCaptchaConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelCaptchaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelCaptchaConfig) ProtoMessage() {}

func (x *ModelCaptchaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelCaptchaConfig.ProtoReflect.Descriptor instead.
func (*ModelCaptchaConfig) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{5}
}

func (x *ModelCaptchaConfig) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelCaptchaConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ModelCaptchaConfig) GetDotCount() int64 {
	if x != nil {
		return x.DotCount
	}
	return 0
}

func (x *ModelCaptchaConfig) GetMaxSkew() float64 {
	if x != nil {
		return x.MaxSkew
	}
	return 0
}

func (x *ModelCaptchaConfig) GetKeyLong() int64 {
	if x != nil {
		return x.KeyLong
	}
	return 0
}

func (x *ModelCaptchaConfig) GetImgWidth() int64 {
	if x != nil {
		return x.ImgWidth
	}
	return 0
}

func (x *ModelCaptchaConfig) GetImgHeight() int64 {
	if x != nil {
		return x.ImgHeight
	}
	return 0
}

type WechatConfigSetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 租户给自己的配置起的名字
	Key string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	// note: 租户的微信公众号信息
	GhId      string `protobuf:"bytes,2,opt,name=GhId,proto3" json:"GhId,omitempty"`
	AppID     string `protobuf:"bytes,3,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppSecret string `protobuf:"bytes,4,opt,name=AppSecret,proto3" json:"AppSecret,omitempty"`
	AppName   string `protobuf:"bytes,5,opt,name=AppName,proto3" json:"AppName,omitempty"`
}

func (x *WechatConfigSetParams) Reset() {
	*x = WechatConfigSetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatConfigSetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatConfigSetParams) ProtoMessage() {}

func (x *WechatConfigSetParams) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatConfigSetParams.ProtoReflect.Descriptor instead.
func (*WechatConfigSetParams) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{6}
}

func (x *WechatConfigSetParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WechatConfigSetParams) GetGhId() string {
	if x != nil {
		return x.GhId
	}
	return ""
}

func (x *WechatConfigSetParams) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *WechatConfigSetParams) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *WechatConfigSetParams) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type DouyinConfigSetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 租户给自己的配置起的名字
	Key string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	// note: 租户的抖音网站营养信息
	ClientKey    string `protobuf:"bytes,2,opt,name=ClientKey,proto3" json:"ClientKey,omitempty"`
	ClientSecret string `protobuf:"bytes,3,opt,name=ClientSecret,proto3" json:"ClientSecret,omitempty"`
	AppName      string `protobuf:"bytes,4,opt,name=AppName,proto3" json:"AppName,omitempty"`
}

func (x *DouyinConfigSetParams) Reset() {
	*x = DouyinConfigSetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DouyinConfigSetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DouyinConfigSetParams) ProtoMessage() {}

func (x *DouyinConfigSetParams) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DouyinConfigSetParams.ProtoReflect.Descriptor instead.
func (*DouyinConfigSetParams) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{7}
}

func (x *DouyinConfigSetParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DouyinConfigSetParams) GetClientKey() string {
	if x != nil {
		return x.ClientKey
	}
	return ""
}

func (x *DouyinConfigSetParams) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *DouyinConfigSetParams) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type CaptchaConfigSetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 租户给自己的配置起的名字
	Key       string  `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	DotCount  int64   `protobuf:"varint,2,opt,name=DotCount,proto3" json:"DotCount,omitempty"`
	MaxSkew   float64 `protobuf:"fixed64,3,opt,name=MaxSkew,proto3" json:"MaxSkew,omitempty"`
	KeyLong   int64   `protobuf:"varint,4,opt,name=KeyLong,proto3" json:"KeyLong,omitempty"`
	ImgWidth  int64   `protobuf:"varint,5,opt,name=ImgWidth,proto3" json:"ImgWidth,omitempty"`
	ImgHeight int64   `protobuf:"varint,6,opt,name=ImgHeight,proto3" json:"ImgHeight,omitempty"`
}

func (x *CaptchaConfigSetParams) Reset() {
	*x = CaptchaConfigSetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaConfigSetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaConfigSetParams) ProtoMessage() {}

func (x *CaptchaConfigSetParams) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaConfigSetParams.ProtoReflect.Descriptor instead.
func (*CaptchaConfigSetParams) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{8}
}

func (x *CaptchaConfigSetParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CaptchaConfigSetParams) GetDotCount() int64 {
	if x != nil {
		return x.DotCount
	}
	return 0
}

func (x *CaptchaConfigSetParams) GetMaxSkew() float64 {
	if x != nil {
		return x.MaxSkew
	}
	return 0
}

func (x *CaptchaConfigSetParams) GetKeyLong() int64 {
	if x != nil {
		return x.KeyLong
	}
	return 0
}

func (x *CaptchaConfigSetParams) GetImgWidth() int64 {
	if x != nil {
		return x.ImgWidth
	}
	return 0
}

func (x *CaptchaConfigSetParams) GetImgHeight() int64 {
	if x != nil {
		return x.ImgHeight
	}
	return 0
}

type SmsConfigSetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 租户给自己的配置起的名字
	Key       string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	AppID     string `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppSecret string `protobuf:"bytes,3,opt,name=AppSecret,proto3" json:"AppSecret,omitempty"`
	Endpoint  string `protobuf:"bytes,4,opt,name=Endpoint,proto3" json:"Endpoint,omitempty"`
	Template  string `protobuf:"bytes,5,opt,name=Template,proto3" json:"Template,omitempty"`
	Type      string `protobuf:"bytes,6,opt,name=Type,proto3" json:"Type,omitempty"`
	SignName  string `protobuf:"bytes,7,opt,name=SignName,proto3" json:"SignName,omitempty"`
	ParamsStr string `protobuf:"bytes,8,opt,name=ParamsStr,proto3" json:"ParamsStr,omitempty"`
}

func (x *SmsConfigSetParams) Reset() {
	*x = SmsConfigSetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsConfigSetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsConfigSetParams) ProtoMessage() {}

func (x *SmsConfigSetParams) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsConfigSetParams.ProtoReflect.Descriptor instead.
func (*SmsConfigSetParams) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{9}
}

func (x *SmsConfigSetParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SmsConfigSetParams) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *SmsConfigSetParams) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *SmsConfigSetParams) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *SmsConfigSetParams) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *SmsConfigSetParams) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SmsConfigSetParams) GetSignName() string {
	if x != nil {
		return x.SignName
	}
	return ""
}

func (x *SmsConfigSetParams) GetParamsStr() string {
	if x != nil {
		return x.ParamsStr
	}
	return ""
}

type OssConfigSetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 租户给自己的配置起的名字
	Key       string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	AppID     string `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppSecret string `protobuf:"bytes,3,opt,name=AppSecret,proto3" json:"AppSecret,omitempty"`
	Endpoint  string `protobuf:"bytes,4,opt,name=Endpoint,proto3" json:"Endpoint,omitempty"`
	Prefix    string `protobuf:"bytes,5,opt,name=Prefix,proto3" json:"Prefix,omitempty"`
	Domain    string `protobuf:"bytes,6,opt,name=Domain,proto3" json:"Domain,omitempty"`
}

func (x *OssConfigSetParams) Reset() {
	*x = OssConfigSetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssConfigSetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssConfigSetParams) ProtoMessage() {}

func (x *OssConfigSetParams) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssConfigSetParams.ProtoReflect.Descriptor instead.
func (*OssConfigSetParams) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{10}
}

func (x *OssConfigSetParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *OssConfigSetParams) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *OssConfigSetParams) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *OssConfigSetParams) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *OssConfigSetParams) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *OssConfigSetParams) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type ConfigGetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 租户给自己的配置起的名字
	Key string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
}

func (x *ConfigGetParams) Reset() {
	*x = ConfigGetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetParams) ProtoMessage() {}

func (x *ConfigGetParams) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetParams.ProtoReflect.Descriptor instead.
func (*ConfigGetParams) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{11}
}

func (x *ConfigGetParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type EmsConfigSetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 租户给自己的配置起的名字
	Key        string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	SenderName string `protobuf:"bytes,2,opt,name=SenderName,proto3" json:"SenderName,omitempty"`
	SenderMail string `protobuf:"bytes,3,opt,name=SenderMail,proto3" json:"SenderMail,omitempty"`
	SenderPwd  string `protobuf:"bytes,4,opt,name=SenderPwd,proto3" json:"SenderPwd,omitempty"`
	Host       string `protobuf:"bytes,5,opt,name=Host,proto3" json:"Host,omitempty"`
	Port       string `protobuf:"bytes,6,opt,name=Port,proto3" json:"Port,omitempty"`
	Protocol   string `protobuf:"bytes,7,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
}

func (x *EmsConfigSetParams) Reset() {
	*x = EmsConfigSetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmsConfigSetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmsConfigSetParams) ProtoMessage() {}

func (x *EmsConfigSetParams) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmsConfigSetParams.ProtoReflect.Descriptor instead.
func (*EmsConfigSetParams) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{12}
}

func (x *EmsConfigSetParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *EmsConfigSetParams) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *EmsConfigSetParams) GetSenderMail() string {
	if x != nil {
		return x.SenderMail
	}
	return ""
}

func (x *EmsConfigSetParams) GetSenderPwd() string {
	if x != nil {
		return x.SenderPwd
	}
	return ""
}

func (x *EmsConfigSetParams) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *EmsConfigSetParams) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *EmsConfigSetParams) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type ConfigGetAllParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigGetAllParams) Reset() {
	*x = ConfigGetAllParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetAllParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetAllParams) ProtoMessage() {}

func (x *ConfigGetAllParams) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetAllParams.ProtoReflect.Descriptor instead.
func (*ConfigGetAllParams) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{13}
}

type SystemConfigSetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 租户给自己的配置起的名字
	Key    string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Desc   string `protobuf:"bytes,3,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Domain string `protobuf:"bytes,4,opt,name=Domain,proto3" json:"Domain,omitempty"`
	Ip     string `protobuf:"bytes,5,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Port   int64  `protobuf:"varint,6,opt,name=Port,proto3" json:"Port,omitempty"`
}

func (x *SystemConfigSetParams) Reset() {
	*x = SystemConfigSetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemConfigSetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemConfigSetParams) ProtoMessage() {}

func (x *SystemConfigSetParams) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemConfigSetParams.ProtoReflect.Descriptor instead.
func (*SystemConfigSetParams) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{14}
}

func (x *SystemConfigSetParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SystemConfigSetParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemConfigSetParams) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SystemConfigSetParams) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *SystemConfigSetParams) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SystemConfigSetParams) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type ModelSystemConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Desc   string `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Domain string `protobuf:"bytes,5,opt,name=Domain,proto3" json:"Domain,omitempty"`
	Ip     string `protobuf:"bytes,6,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Port   int64  `protobuf:"varint,7,opt,name=Port,proto3" json:"Port,omitempty"`
}

func (x *ModelSystemConfig) Reset() {
	*x = ModelSystemConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelSystemConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelSystemConfig) ProtoMessage() {}

func (x *ModelSystemConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelSystemConfig.ProtoReflect.Descriptor instead.
func (*ModelSystemConfig) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{15}
}

func (x *ModelSystemConfig) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelSystemConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ModelSystemConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelSystemConfig) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ModelSystemConfig) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ModelSystemConfig) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ModelSystemConfig) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type PushConfigSetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 租户给自己的配置起的名字
	Key   string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Body  string `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	// ios = 1, huawei = 2, xiaomi = 3, oppo = 4
	Platform int64 `protobuf:"varint,4,opt,name=Platform,proto3" json:"Platform,omitempty"`
}

func (x *PushConfigSetParams) Reset() {
	*x = PushConfigSetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushConfigSetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushConfigSetParams) ProtoMessage() {}

func (x *PushConfigSetParams) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushConfigSetParams.ProtoReflect.Descriptor instead.
func (*PushConfigSetParams) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{16}
}

func (x *PushConfigSetParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PushConfigSetParams) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PushConfigSetParams) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *PushConfigSetParams) GetPlatform() int64 {
	if x != nil {
		return x.Platform
	}
	return 0
}

type ModelPushConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Key      string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Title    string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Body     string `protobuf:"bytes,4,opt,name=Body,proto3" json:"Body,omitempty"`
	Platform int64  `protobuf:"varint,5,opt,name=Platform,proto3" json:"Platform,omitempty"`
}

func (x *ModelPushConfig) Reset() {
	*x = ModelPushConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelPushConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelPushConfig) ProtoMessage() {}

func (x *ModelPushConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelPushConfig.ProtoReflect.Descriptor instead.
func (*ModelPushConfig) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{17}
}

func (x *ModelPushConfig) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelPushConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ModelPushConfig) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModelPushConfig) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *ModelPushConfig) GetPlatform() int64 {
	if x != nil {
		return x.Platform
	}
	return 0
}

type SlsConfigSetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 租户给自己的配置起的名字
	Key           string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	AppID         string `protobuf:"bytes,3,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppSecret     string `protobuf:"bytes,4,opt,name=AppSecret,proto3" json:"AppSecret,omitempty"`
	Endpoint      string `protobuf:"bytes,5,opt,name=Endpoint,proto3" json:"Endpoint,omitempty"`
	ProjectName   string `protobuf:"bytes,6,opt,name=ProjectName,proto3" json:"ProjectName,omitempty"`
	LogStoreName  string `protobuf:"bytes,7,opt,name=LogStoreName,proto3" json:"LogStoreName,omitempty"`
	Topic         string `protobuf:"bytes,8,opt,name=Topic,proto3" json:"Topic,omitempty"`
	ExtraTag      string `protobuf:"bytes,9,opt,name=ExtraTag,proto3" json:"ExtraTag,omitempty"`
	ExtraTagValue string `protobuf:"bytes,10,opt,name=ExtraTagValue,proto3" json:"ExtraTagValue,omitempty"`
}

func (x *SlsConfigSetParams) Reset() {
	*x = SlsConfigSetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlsConfigSetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlsConfigSetParams) ProtoMessage() {}

func (x *SlsConfigSetParams) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlsConfigSetParams.ProtoReflect.Descriptor instead.
func (*SlsConfigSetParams) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{18}
}

func (x *SlsConfigSetParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SlsConfigSetParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SlsConfigSetParams) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *SlsConfigSetParams) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *SlsConfigSetParams) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *SlsConfigSetParams) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *SlsConfigSetParams) GetLogStoreName() string {
	if x != nil {
		return x.LogStoreName
	}
	return ""
}

func (x *SlsConfigSetParams) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SlsConfigSetParams) GetExtraTag() string {
	if x != nil {
		return x.ExtraTag
	}
	return ""
}

func (x *SlsConfigSetParams) GetExtraTagValue() string {
	if x != nil {
		return x.ExtraTagValue
	}
	return ""
}

type SlsConfigGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string          `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string          `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelSlsConfig `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SlsConfigGetResp) Reset() {
	*x = SlsConfigGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlsConfigGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlsConfigGetResp) ProtoMessage() {}

func (x *SlsConfigGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlsConfigGetResp.ProtoReflect.Descriptor instead.
func (*SlsConfigGetResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{19}
}

func (x *SlsConfigGetResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SlsConfigGetResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SlsConfigGetResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *SlsConfigGetResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SlsConfigGetResp) GetData() *ModelSlsConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

type SlsConfigGetAllResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *SlsConfigGetAllRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SlsConfigGetAllResp) Reset() {
	*x = SlsConfigGetAllResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlsConfigGetAllResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlsConfigGetAllResp) ProtoMessage() {}

func (x *SlsConfigGetAllResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlsConfigGetAllResp.ProtoReflect.Descriptor instead.
func (*SlsConfigGetAllResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{20}
}

func (x *SlsConfigGetAllResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SlsConfigGetAllResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SlsConfigGetAllResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *SlsConfigGetAllResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SlsConfigGetAllResp) GetData() *SlsConfigGetAllRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SlsConfigGetAllRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs map[string]*ModelSlsConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SlsConfigGetAllRespData) Reset() {
	*x = SlsConfigGetAllRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlsConfigGetAllRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlsConfigGetAllRespData) ProtoMessage() {}

func (x *SlsConfigGetAllRespData) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlsConfigGetAllRespData.ProtoReflect.Descriptor instead.
func (*SlsConfigGetAllRespData) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{21}
}

func (x *SlsConfigGetAllRespData) GetConfigs() map[string]*ModelSlsConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type ModelSlsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Key           string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	AppID         string `protobuf:"bytes,4,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppSecret     string `protobuf:"bytes,5,opt,name=AppSecret,proto3" json:"AppSecret,omitempty"`
	Endpoint      string `protobuf:"bytes,6,opt,name=Endpoint,proto3" json:"Endpoint,omitempty"`
	ProjectName   string `protobuf:"bytes,7,opt,name=ProjectName,proto3" json:"ProjectName,omitempty"`
	LogStoreName  string `protobuf:"bytes,8,opt,name=LogStoreName,proto3" json:"LogStoreName,omitempty"`
	Topic         string `protobuf:"bytes,9,opt,name=Topic,proto3" json:"Topic,omitempty"`
	ExtraTag      string `protobuf:"bytes,10,opt,name=ExtraTag,proto3" json:"ExtraTag,omitempty"`
	ExtraTagValue string `protobuf:"bytes,11,opt,name=ExtraTagValue,proto3" json:"ExtraTagValue,omitempty"`
}

func (x *ModelSlsConfig) Reset() {
	*x = ModelSlsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelSlsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelSlsConfig) ProtoMessage() {}

func (x *ModelSlsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelSlsConfig.ProtoReflect.Descriptor instead.
func (*ModelSlsConfig) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{22}
}

func (x *ModelSlsConfig) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelSlsConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ModelSlsConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelSlsConfig) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ModelSlsConfig) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *ModelSlsConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ModelSlsConfig) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *ModelSlsConfig) GetLogStoreName() string {
	if x != nil {
		return x.LogStoreName
	}
	return ""
}

func (x *ModelSlsConfig) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ModelSlsConfig) GetExtraTag() string {
	if x != nil {
		return x.ExtraTag
	}
	return ""
}

func (x *ModelSlsConfig) GetExtraTagValue() string {
	if x != nil {
		return x.ExtraTagValue
	}
	return ""
}

type PushConfigGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string           `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelPushConfig `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PushConfigGetResp) Reset() {
	*x = PushConfigGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushConfigGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushConfigGetResp) ProtoMessage() {}

func (x *PushConfigGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushConfigGetResp.ProtoReflect.Descriptor instead.
func (*PushConfigGetResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{23}
}

func (x *PushConfigGetResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PushConfigGetResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PushConfigGetResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *PushConfigGetResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PushConfigGetResp) GetData() *ModelPushConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

type PushConfigGetAllResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                    `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                    `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *PushConfigGetAllRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PushConfigGetAllResp) Reset() {
	*x = PushConfigGetAllResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushConfigGetAllResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushConfigGetAllResp) ProtoMessage() {}

func (x *PushConfigGetAllResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushConfigGetAllResp.ProtoReflect.Descriptor instead.
func (*PushConfigGetAllResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{24}
}

func (x *PushConfigGetAllResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PushConfigGetAllResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PushConfigGetAllResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *PushConfigGetAllResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PushConfigGetAllResp) GetData() *PushConfigGetAllRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PushConfigGetAllRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs map[string]*ModelPushConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PushConfigGetAllRespData) Reset() {
	*x = PushConfigGetAllRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushConfigGetAllRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushConfigGetAllRespData) ProtoMessage() {}

func (x *PushConfigGetAllRespData) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushConfigGetAllRespData.ProtoReflect.Descriptor instead.
func (*PushConfigGetAllRespData) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{25}
}

func (x *PushConfigGetAllRespData) GetConfigs() map[string]*ModelPushConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type SystemConfigGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string             `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string             `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelSystemConfig `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemConfigGetResp) Reset() {
	*x = SystemConfigGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemConfigGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemConfigGetResp) ProtoMessage() {}

func (x *SystemConfigGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemConfigGetResp.ProtoReflect.Descriptor instead.
func (*SystemConfigGetResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{26}
}

func (x *SystemConfigGetResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemConfigGetResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemConfigGetResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *SystemConfigGetResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SystemConfigGetResp) GetData() *ModelSystemConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

type SystemConfigGetAllResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                      `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                      `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *SystemConfigGetAllRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemConfigGetAllResp) Reset() {
	*x = SystemConfigGetAllResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemConfigGetAllResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemConfigGetAllResp) ProtoMessage() {}

func (x *SystemConfigGetAllResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemConfigGetAllResp.ProtoReflect.Descriptor instead.
func (*SystemConfigGetAllResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{27}
}

func (x *SystemConfigGetAllResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemConfigGetAllResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemConfigGetAllResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *SystemConfigGetAllResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SystemConfigGetAllResp) GetData() *SystemConfigGetAllRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SystemConfigGetAllRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs map[string]*ModelSystemConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SystemConfigGetAllRespData) Reset() {
	*x = SystemConfigGetAllRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemConfigGetAllRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemConfigGetAllRespData) ProtoMessage() {}

func (x *SystemConfigGetAllRespData) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemConfigGetAllRespData.ProtoReflect.Descriptor instead.
func (*SystemConfigGetAllRespData) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{28}
}

func (x *SystemConfigGetAllRespData) GetConfigs() map[string]*ModelSystemConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{29}
}

func (x *Data) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *Data  `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ConfigResp) Reset() {
	*x = ConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResp) ProtoMessage() {}

func (x *ConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResp.ProtoReflect.Descriptor instead.
func (*ConfigResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{30}
}

func (x *ConfigResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ConfigResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ConfigResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *ConfigResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ConfigResp) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatConfigGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string             `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string             `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelWechatConfig `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatConfigGetResp) Reset() {
	*x = WechatConfigGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatConfigGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatConfigGetResp) ProtoMessage() {}

func (x *WechatConfigGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatConfigGetResp.ProtoReflect.Descriptor instead.
func (*WechatConfigGetResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{31}
}

func (x *WechatConfigGetResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatConfigGetResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatConfigGetResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatConfigGetResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatConfigGetResp) GetData() *ModelWechatConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatConfigGetAllResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                      `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                      `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatConfigGetAllRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatConfigGetAllResp) Reset() {
	*x = WechatConfigGetAllResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatConfigGetAllResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatConfigGetAllResp) ProtoMessage() {}

func (x *WechatConfigGetAllResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatConfigGetAllResp.ProtoReflect.Descriptor instead.
func (*WechatConfigGetAllResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{32}
}

func (x *WechatConfigGetAllResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatConfigGetAllResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatConfigGetAllResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatConfigGetAllResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatConfigGetAllResp) GetData() *WechatConfigGetAllRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DouyinConfigGetAllResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                      `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                      `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *DouyinConfigGetAllRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DouyinConfigGetAllResp) Reset() {
	*x = DouyinConfigGetAllResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DouyinConfigGetAllResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DouyinConfigGetAllResp) ProtoMessage() {}

func (x *DouyinConfigGetAllResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DouyinConfigGetAllResp.ProtoReflect.Descriptor instead.
func (*DouyinConfigGetAllResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{33}
}

func (x *DouyinConfigGetAllResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DouyinConfigGetAllResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DouyinConfigGetAllResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *DouyinConfigGetAllResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DouyinConfigGetAllResp) GetData() *DouyinConfigGetAllRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DouyinConfigGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string             `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string             `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelDouyinConfig `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DouyinConfigGetResp) Reset() {
	*x = DouyinConfigGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DouyinConfigGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DouyinConfigGetResp) ProtoMessage() {}

func (x *DouyinConfigGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DouyinConfigGetResp.ProtoReflect.Descriptor instead.
func (*DouyinConfigGetResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{34}
}

func (x *DouyinConfigGetResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DouyinConfigGetResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DouyinConfigGetResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *DouyinConfigGetResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DouyinConfigGetResp) GetData() *ModelDouyinConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

type CaptchaConfigGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string              `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string              `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelCaptchaConfig `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CaptchaConfigGetResp) Reset() {
	*x = CaptchaConfigGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaConfigGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaConfigGetResp) ProtoMessage() {}

func (x *CaptchaConfigGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaConfigGetResp.ProtoReflect.Descriptor instead.
func (*CaptchaConfigGetResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{35}
}

func (x *CaptchaConfigGetResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CaptchaConfigGetResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CaptchaConfigGetResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CaptchaConfigGetResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CaptchaConfigGetResp) GetData() *ModelCaptchaConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatConfigGetAllRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs map[string]*ModelWechatConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WechatConfigGetAllRespData) Reset() {
	*x = WechatConfigGetAllRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatConfigGetAllRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatConfigGetAllRespData) ProtoMessage() {}

func (x *WechatConfigGetAllRespData) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatConfigGetAllRespData.ProtoReflect.Descriptor instead.
func (*WechatConfigGetAllRespData) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{36}
}

func (x *WechatConfigGetAllRespData) GetConfigs() map[string]*ModelWechatConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type DouyinConfigGetAllRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs map[string]*ModelDouyinConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DouyinConfigGetAllRespData) Reset() {
	*x = DouyinConfigGetAllRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DouyinConfigGetAllRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DouyinConfigGetAllRespData) ProtoMessage() {}

func (x *DouyinConfigGetAllRespData) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DouyinConfigGetAllRespData.ProtoReflect.Descriptor instead.
func (*DouyinConfigGetAllRespData) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{37}
}

func (x *DouyinConfigGetAllRespData) GetConfigs() map[string]*ModelDouyinConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type CaptchaConfigGetAllResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                       `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                       `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *CaptchaConfigGetAllRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CaptchaConfigGetAllResp) Reset() {
	*x = CaptchaConfigGetAllResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaConfigGetAllResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaConfigGetAllResp) ProtoMessage() {}

func (x *CaptchaConfigGetAllResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaConfigGetAllResp.ProtoReflect.Descriptor instead.
func (*CaptchaConfigGetAllResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{38}
}

func (x *CaptchaConfigGetAllResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CaptchaConfigGetAllResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CaptchaConfigGetAllResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CaptchaConfigGetAllResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CaptchaConfigGetAllResp) GetData() *CaptchaConfigGetAllRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CaptchaConfigGetAllRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs map[string]*ModelCaptchaConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CaptchaConfigGetAllRespData) Reset() {
	*x = CaptchaConfigGetAllRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaConfigGetAllRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaConfigGetAllRespData) ProtoMessage() {}

func (x *CaptchaConfigGetAllRespData) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaConfigGetAllRespData.ProtoReflect.Descriptor instead.
func (*CaptchaConfigGetAllRespData) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{39}
}

func (x *CaptchaConfigGetAllRespData) GetConfigs() map[string]*ModelCaptchaConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type SmsConfigGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string          `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string          `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelSmsConfig `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SmsConfigGetResp) Reset() {
	*x = SmsConfigGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsConfigGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsConfigGetResp) ProtoMessage() {}

func (x *SmsConfigGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsConfigGetResp.ProtoReflect.Descriptor instead.
func (*SmsConfigGetResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{40}
}

func (x *SmsConfigGetResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SmsConfigGetResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SmsConfigGetResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *SmsConfigGetResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SmsConfigGetResp) GetData() *ModelSmsConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

type SmsConfigGetAllResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *SmsConfigGetAllRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SmsConfigGetAllResp) Reset() {
	*x = SmsConfigGetAllResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsConfigGetAllResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsConfigGetAllResp) ProtoMessage() {}

func (x *SmsConfigGetAllResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsConfigGetAllResp.ProtoReflect.Descriptor instead.
func (*SmsConfigGetAllResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{41}
}

func (x *SmsConfigGetAllResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SmsConfigGetAllResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SmsConfigGetAllResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *SmsConfigGetAllResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SmsConfigGetAllResp) GetData() *SmsConfigGetAllRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SmsConfigGetAllRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs map[string]*ModelSmsConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SmsConfigGetAllRespData) Reset() {
	*x = SmsConfigGetAllRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsConfigGetAllRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsConfigGetAllRespData) ProtoMessage() {}

func (x *SmsConfigGetAllRespData) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsConfigGetAllRespData.ProtoReflect.Descriptor instead.
func (*SmsConfigGetAllRespData) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{42}
}

func (x *SmsConfigGetAllRespData) GetConfigs() map[string]*ModelSmsConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type EmsConfigGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string          `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string          `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelEmsConfig `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EmsConfigGetResp) Reset() {
	*x = EmsConfigGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmsConfigGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmsConfigGetResp) ProtoMessage() {}

func (x *EmsConfigGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmsConfigGetResp.ProtoReflect.Descriptor instead.
func (*EmsConfigGetResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{43}
}

func (x *EmsConfigGetResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EmsConfigGetResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *EmsConfigGetResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *EmsConfigGetResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *EmsConfigGetResp) GetData() *ModelEmsConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

type EmsConfigGetAllResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *EmsConfigGetAllRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EmsConfigGetAllResp) Reset() {
	*x = EmsConfigGetAllResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmsConfigGetAllResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmsConfigGetAllResp) ProtoMessage() {}

func (x *EmsConfigGetAllResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmsConfigGetAllResp.ProtoReflect.Descriptor instead.
func (*EmsConfigGetAllResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{44}
}

func (x *EmsConfigGetAllResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EmsConfigGetAllResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *EmsConfigGetAllResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *EmsConfigGetAllResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *EmsConfigGetAllResp) GetData() *EmsConfigGetAllRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type EmsConfigGetAllRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs map[string]*ModelEmsConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EmsConfigGetAllRespData) Reset() {
	*x = EmsConfigGetAllRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmsConfigGetAllRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmsConfigGetAllRespData) ProtoMessage() {}

func (x *EmsConfigGetAllRespData) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmsConfigGetAllRespData.ProtoReflect.Descriptor instead.
func (*EmsConfigGetAllRespData) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{45}
}

func (x *EmsConfigGetAllRespData) GetConfigs() map[string]*ModelEmsConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type OssConfigGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string          `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string          `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelOssConfig `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OssConfigGetResp) Reset() {
	*x = OssConfigGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssConfigGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssConfigGetResp) ProtoMessage() {}

func (x *OssConfigGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssConfigGetResp.ProtoReflect.Descriptor instead.
func (*OssConfigGetResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{46}
}

func (x *OssConfigGetResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OssConfigGetResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OssConfigGetResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *OssConfigGetResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OssConfigGetResp) GetData() *ModelOssConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

type OssConfigGetAllResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *OssConfigGetAllRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OssConfigGetAllResp) Reset() {
	*x = OssConfigGetAllResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssConfigGetAllResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssConfigGetAllResp) ProtoMessage() {}

func (x *OssConfigGetAllResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssConfigGetAllResp.ProtoReflect.Descriptor instead.
func (*OssConfigGetAllResp) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{47}
}

func (x *OssConfigGetAllResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OssConfigGetAllResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OssConfigGetAllResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *OssConfigGetAllResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OssConfigGetAllResp) GetData() *OssConfigGetAllRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type OssConfigGetAllRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs map[string]*ModelOssConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OssConfigGetAllRespData) Reset() {
	*x = OssConfigGetAllRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssConfigGetAllRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssConfigGetAllRespData) ProtoMessage() {}

func (x *OssConfigGetAllRespData) ProtoReflect() protoreflect.Message {
	mi := &file_cloudc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssConfigGetAllRespData.ProtoReflect.Descriptor instead.
func (*OssConfigGetAllRespData) Descriptor() ([]byte, []int) {
	return file_cloudc_proto_rawDescGZIP(), []int{48}
}

func (x *OssConfigGetAllRespData) GetConfigs() map[string]*ModelOssConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

var File_cloudc_proto protoreflect.FileDescriptor

var file_cloudc_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x47, 0x68, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x68,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x91, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x6f, 0x75, 0x79, 0x69, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x6d,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x69, 0x67,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x69, 0x67,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x53,
	0x74, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x53, 0x74, 0x72, 0x22, 0xd4, 0x01, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6d, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x4d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x50, 0x77, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x50, 0x77, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f,
	0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0xb2, 0x01, 0x0a, 0x0e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22,
	0xc0, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x6f, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x6f, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x53, 0x6b, 0x65, 0x77, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x4d, 0x61, 0x78, 0x53, 0x6b, 0x65, 0x77, 0x12, 0x18,
	0x0a, 0x07, 0x4b, 0x65, 0x79, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x4b, 0x65, 0x79, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x67, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x6d, 0x67, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6d, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x49, 0x6d, 0x67, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x15, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x47, 0x68, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x68,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x85, 0x01, 0x0a, 0x15, 0x44, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x16, 0x43, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x53, 0x6b, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x4d, 0x61, 0x78, 0x53, 0x6b, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x4b,
	0x65, 0x79, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4b, 0x65,
	0x79, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x67, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x6d, 0x67, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6d, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x49, 0x6d, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0xe0, 0x01, 0x0a, 0x12, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x69, 0x67, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x53, 0x74,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x53,
	0x74, 0x72, 0x22, 0xa6, 0x01, 0x0a, 0x12, 0x4f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x23, 0x0a, 0x0f, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79,
	0x22, 0xc8, 0x01, 0x0a, 0x12, 0x45, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x50, 0x77, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x50, 0x77, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x14, 0x0a, 0x12, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x6f, 0x72,
	0x74, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x6d, 0x0a,
	0x13, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x42, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x79, 0x0a, 0x0f,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0xa8, 0x02, 0x0a, 0x12, 0x53, 0x6c, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70,
	0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4c, 0x6f,
	0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x74, 0x72, 0x61, 0x54, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x45, 0x78, 0x74, 0x72, 0x61, 0x54, 0x61, 0x67, 0x12, 0x24, 0x0a, 0x0d,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x45, 0x78, 0x74, 0x72, 0x61, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x53, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x6c, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa2, 0x01, 0x0a, 0x13,
	0x53, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x63, 0x2e, 0x53, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xb5, 0x01, 0x0a, 0x17, 0x53, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x53, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x1a, 0x52, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x53, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb4, 0x02, 0x0a, 0x0e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x53, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4c, 0x6f, 0x67, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1a, 0x0a,
	0x08, 0x45, 0x78, 0x74, 0x72, 0x61, 0x54, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x45, 0x78, 0x74, 0x72, 0x61, 0x54, 0x61, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x45, 0x78, 0x74, 0x72, 0x61, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x98, 0x01, 0x0a, 0x11, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa4, 0x01, 0x0a, 0x14, 0x50,
	0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x34, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xb8, 0x01, 0x0a, 0x18, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x47,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x53, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9c, 0x01, 0x0a,
	0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a, 0x16,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x36,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbe, 0x01, 0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x1a, 0x55, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x86, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x63, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9c, 0x01, 0x0a,
	0x13, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a, 0x16,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x36,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a, 0x16, 0x44, 0x6f, 0x75, 0x79, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63,
	0x2e, 0x44, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x9c, 0x01, 0x0a, 0x13, 0x44, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x6f,
	0x75, 0x79, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x9e, 0x01, 0x0a, 0x14, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xbe, 0x01, 0x0a, 0x1a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x49, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x55, 0x0a, 0x0c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xbe, 0x01, 0x0a, 0x1a, 0x44, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x49, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x44, 0x6f, 0x75, 0x79,
	0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x55, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x6f, 0x75, 0x79,
	0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xaa, 0x01, 0x0a, 0x17, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xc1, 0x01, 0x0a, 0x1b, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x4a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x56, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x6d,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa2, 0x01,
	0x0a, 0x13, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x33, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x63, 0x2e, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xb5, 0x01, 0x0a, 0x17, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x46,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x52, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x45,
	0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xa2, 0x01, 0x0a, 0x13, 0x45, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x45, 0x6d, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb5, 0x01, 0x0a, 0x17, 0x45, 0x6d, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x45,
	0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x52, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6d, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x96, 0x01, 0x0a, 0x10, 0x4f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2a, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x73, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa2, 0x01, 0x0a, 0x13, 0x4f, 0x73,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63,
	0x2e, 0x4f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb5,
	0x01, 0x0a, 0x17, 0x4f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x1a, 0x52, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x4f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xaa, 0x0f, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x53, 0x6c, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x63, 0x2e, 0x53, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0c, 0x53, 0x6c, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x53, 0x6c, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0f, 0x53,
	0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1a,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x63, 0x2e, 0x53, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0d, 0x50, 0x75, 0x73, 0x68, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0d, 0x50, 0x75, 0x73,
	0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c,
	0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1c,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0f,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x12,
	0x1d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x47, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1b,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x12, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1e, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a,
	0x10, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65,
	0x74, 0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x10, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x1c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x52, 0x0a, 0x13, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x1f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0f, 0x44, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63,
	0x2e, 0x44, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0f, 0x44, 0x6f,
	0x75, 0x79, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e,
	0x44, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x12, 0x44, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x44,
	0x6f, 0x75, 0x79, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0f, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x63, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0f, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x12, 0x17,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63,
	0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x12, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0c, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e,
	0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0c, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0f, 0x53, 0x6d, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x63, 0x2e, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0c, 0x45, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x53, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x45,
	0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0c, 0x45, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x18,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x45, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0f, 0x45, 0x6d, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63,
	0x2e, 0x45, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0c, 0x4f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4f, 0x73,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x12, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0c, 0x4f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x18, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e, 0x4f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0f, 0x4f, 0x73, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x2e,
	0x4f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloudc_proto_rawDescOnce sync.Once
	file_cloudc_proto_rawDescData = file_cloudc_proto_rawDesc
)

func file_cloudc_proto_rawDescGZIP() []byte {
	file_cloudc_proto_rawDescOnce.Do(func() {
		file_cloudc_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloudc_proto_rawDescData)
	})
	return file_cloudc_proto_rawDescData
}

var file_cloudc_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_cloudc_proto_goTypes = []interface{}{
	(*ModelWechatConfig)(nil),           // 0: cloudc.ModelWechatConfig
	(*ModelDouyinConfig)(nil),           // 1: cloudc.ModelDouyinConfig
	(*ModelSmsConfig)(nil),              // 2: cloudc.ModelSmsConfig
	(*ModelEmsConfig)(nil),              // 3: cloudc.ModelEmsConfig
	(*ModelOssConfig)(nil),              // 4: cloudc.ModelOssConfig
	(*ModelCaptchaConfig)(nil),          // 5: cloudc.ModelCaptchaConfig
	(*WechatConfigSetParams)(nil),       // 6: cloudc.WechatConfigSetParams
	(*DouyinConfigSetParams)(nil),       // 7: cloudc.DouyinConfigSetParams
	(*CaptchaConfigSetParams)(nil),      // 8: cloudc.CaptchaConfigSetParams
	(*SmsConfigSetParams)(nil),          // 9: cloudc.SmsConfigSetParams
	(*OssConfigSetParams)(nil),          // 10: cloudc.OssConfigSetParams
	(*ConfigGetParams)(nil),             // 11: cloudc.ConfigGetParams
	(*EmsConfigSetParams)(nil),          // 12: cloudc.EmsConfigSetParams
	(*ConfigGetAllParams)(nil),          // 13: cloudc.ConfigGetAllParams
	(*SystemConfigSetParams)(nil),       // 14: cloudc.SystemConfigSetParams
	(*ModelSystemConfig)(nil),           // 15: cloudc.ModelSystemConfig
	(*PushConfigSetParams)(nil),         // 16: cloudc.PushConfigSetParams
	(*ModelPushConfig)(nil),             // 17: cloudc.ModelPushConfig
	(*SlsConfigSetParams)(nil),          // 18: cloudc.SlsConfigSetParams
	(*SlsConfigGetResp)(nil),            // 19: cloudc.SlsConfigGetResp
	(*SlsConfigGetAllResp)(nil),         // 20: cloudc.SlsConfigGetAllResp
	(*SlsConfigGetAllRespData)(nil),     // 21: cloudc.SlsConfigGetAllRespData
	(*ModelSlsConfig)(nil),              // 22: cloudc.ModelSlsConfig
	(*PushConfigGetResp)(nil),           // 23: cloudc.PushConfigGetResp
	(*PushConfigGetAllResp)(nil),        // 24: cloudc.PushConfigGetAllResp
	(*PushConfigGetAllRespData)(nil),    // 25: cloudc.PushConfigGetAllRespData
	(*SystemConfigGetResp)(nil),         // 26: cloudc.SystemConfigGetResp
	(*SystemConfigGetAllResp)(nil),      // 27: cloudc.SystemConfigGetAllResp
	(*SystemConfigGetAllRespData)(nil),  // 28: cloudc.SystemConfigGetAllRespData
	(*Data)(nil),                        // 29: cloudc.Data
	(*ConfigResp)(nil),                  // 30: cloudc.ConfigResp
	(*WechatConfigGetResp)(nil),         // 31: cloudc.WechatConfigGetResp
	(*WechatConfigGetAllResp)(nil),      // 32: cloudc.WechatConfigGetAllResp
	(*DouyinConfigGetAllResp)(nil),      // 33: cloudc.DouyinConfigGetAllResp
	(*DouyinConfigGetResp)(nil),         // 34: cloudc.DouyinConfigGetResp
	(*CaptchaConfigGetResp)(nil),        // 35: cloudc.CaptchaConfigGetResp
	(*WechatConfigGetAllRespData)(nil),  // 36: cloudc.WechatConfigGetAllRespData
	(*DouyinConfigGetAllRespData)(nil),  // 37: cloudc.DouyinConfigGetAllRespData
	(*CaptchaConfigGetAllResp)(nil),     // 38: cloudc.CaptchaConfigGetAllResp
	(*CaptchaConfigGetAllRespData)(nil), // 39: cloudc.CaptchaConfigGetAllRespData
	(*SmsConfigGetResp)(nil),            // 40: cloudc.SmsConfigGetResp
	(*SmsConfigGetAllResp)(nil),         // 41: cloudc.SmsConfigGetAllResp
	(*SmsConfigGetAllRespData)(nil),     // 42: cloudc.SmsConfigGetAllRespData
	(*EmsConfigGetResp)(nil),            // 43: cloudc.EmsConfigGetResp
	(*EmsConfigGetAllResp)(nil),         // 44: cloudc.EmsConfigGetAllResp
	(*EmsConfigGetAllRespData)(nil),     // 45: cloudc.EmsConfigGetAllRespData
	(*OssConfigGetResp)(nil),            // 46: cloudc.OssConfigGetResp
	(*OssConfigGetAllResp)(nil),         // 47: cloudc.OssConfigGetAllResp
	(*OssConfigGetAllRespData)(nil),     // 48: cloudc.OssConfigGetAllRespData
	nil,                                 // 49: cloudc.SlsConfigGetAllRespData.ConfigsEntry
	nil,                                 // 50: cloudc.PushConfigGetAllRespData.ConfigsEntry
	nil,                                 // 51: cloudc.SystemConfigGetAllRespData.ConfigsEntry
	nil,                                 // 52: cloudc.WechatConfigGetAllRespData.ConfigsEntry
	nil,                                 // 53: cloudc.DouyinConfigGetAllRespData.ConfigsEntry
	nil,                                 // 54: cloudc.CaptchaConfigGetAllRespData.ConfigsEntry
	nil,                                 // 55: cloudc.SmsConfigGetAllRespData.ConfigsEntry
	nil,                                 // 56: cloudc.EmsConfigGetAllRespData.ConfigsEntry
	nil,                                 // 57: cloudc.OssConfigGetAllRespData.ConfigsEntry
}
var file_cloudc_proto_depIdxs = []int32{
	22, // 0: cloudc.SlsConfigGetResp.data:type_name -> cloudc.ModelSlsConfig
	21, // 1: cloudc.SlsConfigGetAllResp.data:type_name -> cloudc.SlsConfigGetAllRespData
	49, // 2: cloudc.SlsConfigGetAllRespData.configs:type_name -> cloudc.SlsConfigGetAllRespData.ConfigsEntry
	17, // 3: cloudc.PushConfigGetResp.data:type_name -> cloudc.ModelPushConfig
	25, // 4: cloudc.PushConfigGetAllResp.data:type_name -> cloudc.PushConfigGetAllRespData
	50, // 5: cloudc.PushConfigGetAllRespData.configs:type_name -> cloudc.PushConfigGetAllRespData.ConfigsEntry
	15, // 6: cloudc.SystemConfigGetResp.data:type_name -> cloudc.ModelSystemConfig
	28, // 7: cloudc.SystemConfigGetAllResp.data:type_name -> cloudc.SystemConfigGetAllRespData
	51, // 8: cloudc.SystemConfigGetAllRespData.configs:type_name -> cloudc.SystemConfigGetAllRespData.ConfigsEntry
	29, // 9: cloudc.ConfigResp.data:type_name -> cloudc.Data
	0,  // 10: cloudc.WechatConfigGetResp.data:type_name -> cloudc.ModelWechatConfig
	36, // 11: cloudc.WechatConfigGetAllResp.data:type_name -> cloudc.WechatConfigGetAllRespData
	37, // 12: cloudc.DouyinConfigGetAllResp.data:type_name -> cloudc.DouyinConfigGetAllRespData
	1,  // 13: cloudc.DouyinConfigGetResp.data:type_name -> cloudc.ModelDouyinConfig
	5,  // 14: cloudc.CaptchaConfigGetResp.data:type_name -> cloudc.ModelCaptchaConfig
	52, // 15: cloudc.WechatConfigGetAllRespData.configs:type_name -> cloudc.WechatConfigGetAllRespData.ConfigsEntry
	53, // 16: cloudc.DouyinConfigGetAllRespData.configs:type_name -> cloudc.DouyinConfigGetAllRespData.ConfigsEntry
	39, // 17: cloudc.CaptchaConfigGetAllResp.data:type_name -> cloudc.CaptchaConfigGetAllRespData
	54, // 18: cloudc.CaptchaConfigGetAllRespData.configs:type_name -> cloudc.CaptchaConfigGetAllRespData.ConfigsEntry
	2,  // 19: cloudc.SmsConfigGetResp.data:type_name -> cloudc.ModelSmsConfig
	42, // 20: cloudc.SmsConfigGetAllResp.data:type_name -> cloudc.SmsConfigGetAllRespData
	55, // 21: cloudc.SmsConfigGetAllRespData.configs:type_name -> cloudc.SmsConfigGetAllRespData.ConfigsEntry
	3,  // 22: cloudc.EmsConfigGetResp.data:type_name -> cloudc.ModelEmsConfig
	45, // 23: cloudc.EmsConfigGetAllResp.data:type_name -> cloudc.EmsConfigGetAllRespData
	56, // 24: cloudc.EmsConfigGetAllRespData.configs:type_name -> cloudc.EmsConfigGetAllRespData.ConfigsEntry
	4,  // 25: cloudc.OssConfigGetResp.data:type_name -> cloudc.ModelOssConfig
	48, // 26: cloudc.OssConfigGetAllResp.data:type_name -> cloudc.OssConfigGetAllRespData
	57, // 27: cloudc.OssConfigGetAllRespData.configs:type_name -> cloudc.OssConfigGetAllRespData.ConfigsEntry
	22, // 28: cloudc.SlsConfigGetAllRespData.ConfigsEntry.value:type_name -> cloudc.ModelSlsConfig
	17, // 29: cloudc.PushConfigGetAllRespData.ConfigsEntry.value:type_name -> cloudc.ModelPushConfig
	15, // 30: cloudc.SystemConfigGetAllRespData.ConfigsEntry.value:type_name -> cloudc.ModelSystemConfig
	0,  // 31: cloudc.WechatConfigGetAllRespData.ConfigsEntry.value:type_name -> cloudc.ModelWechatConfig
	1,  // 32: cloudc.DouyinConfigGetAllRespData.ConfigsEntry.value:type_name -> cloudc.ModelDouyinConfig
	5,  // 33: cloudc.CaptchaConfigGetAllRespData.ConfigsEntry.value:type_name -> cloudc.ModelCaptchaConfig
	2,  // 34: cloudc.SmsConfigGetAllRespData.ConfigsEntry.value:type_name -> cloudc.ModelSmsConfig
	3,  // 35: cloudc.EmsConfigGetAllRespData.ConfigsEntry.value:type_name -> cloudc.ModelEmsConfig
	4,  // 36: cloudc.OssConfigGetAllRespData.ConfigsEntry.value:type_name -> cloudc.ModelOssConfig
	18, // 37: cloudc.CloudCService.SlsConfigSet:input_type -> cloudc.SlsConfigSetParams
	11, // 38: cloudc.CloudCService.SlsConfigGet:input_type -> cloudc.ConfigGetParams
	13, // 39: cloudc.CloudCService.SlsConfigGetAll:input_type -> cloudc.ConfigGetAllParams
	16, // 40: cloudc.CloudCService.PushConfigSet:input_type -> cloudc.PushConfigSetParams
	11, // 41: cloudc.CloudCService.PushConfigGet:input_type -> cloudc.ConfigGetParams
	13, // 42: cloudc.CloudCService.PushConfigGetAll:input_type -> cloudc.ConfigGetAllParams
	14, // 43: cloudc.CloudCService.SystemConfigSet:input_type -> cloudc.SystemConfigSetParams
	11, // 44: cloudc.CloudCService.SystemConfigGet:input_type -> cloudc.ConfigGetParams
	13, // 45: cloudc.CloudCService.SystemConfigGetAll:input_type -> cloudc.ConfigGetAllParams
	8,  // 46: cloudc.CloudCService.CaptchaConfigSet:input_type -> cloudc.CaptchaConfigSetParams
	11, // 47: cloudc.CloudCService.CaptchaConfigGet:input_type -> cloudc.ConfigGetParams
	13, // 48: cloudc.CloudCService.CaptchaConfigGetAll:input_type -> cloudc.ConfigGetAllParams
	7,  // 49: cloudc.CloudCService.DouyinConfigSet:input_type -> cloudc.DouyinConfigSetParams
	11, // 50: cloudc.CloudCService.DouyinConfigGet:input_type -> cloudc.ConfigGetParams
	13, // 51: cloudc.CloudCService.DouyinConfigGetAll:input_type -> cloudc.ConfigGetAllParams
	6,  // 52: cloudc.CloudCService.WechatConfigSet:input_type -> cloudc.WechatConfigSetParams
	11, // 53: cloudc.CloudCService.WechatConfigGet:input_type -> cloudc.ConfigGetParams
	13, // 54: cloudc.CloudCService.WechatConfigGetAll:input_type -> cloudc.ConfigGetAllParams
	9,  // 55: cloudc.CloudCService.SmsConfigSet:input_type -> cloudc.SmsConfigSetParams
	11, // 56: cloudc.CloudCService.SmsConfigGet:input_type -> cloudc.ConfigGetParams
	13, // 57: cloudc.CloudCService.SmsConfigGetAll:input_type -> cloudc.ConfigGetAllParams
	12, // 58: cloudc.CloudCService.EmsConfigSet:input_type -> cloudc.EmsConfigSetParams
	11, // 59: cloudc.CloudCService.EmsConfigGet:input_type -> cloudc.ConfigGetParams
	13, // 60: cloudc.CloudCService.EmsConfigGetAll:input_type -> cloudc.ConfigGetAllParams
	10, // 61: cloudc.CloudCService.OssConfigSet:input_type -> cloudc.OssConfigSetParams
	11, // 62: cloudc.CloudCService.OssConfigGet:input_type -> cloudc.ConfigGetParams
	13, // 63: cloudc.CloudCService.OssConfigGetAll:input_type -> cloudc.ConfigGetAllParams
	30, // 64: cloudc.CloudCService.SlsConfigSet:output_type -> cloudc.ConfigResp
	19, // 65: cloudc.CloudCService.SlsConfigGet:output_type -> cloudc.SlsConfigGetResp
	20, // 66: cloudc.CloudCService.SlsConfigGetAll:output_type -> cloudc.SlsConfigGetAllResp
	30, // 67: cloudc.CloudCService.PushConfigSet:output_type -> cloudc.ConfigResp
	23, // 68: cloudc.CloudCService.PushConfigGet:output_type -> cloudc.PushConfigGetResp
	24, // 69: cloudc.CloudCService.PushConfigGetAll:output_type -> cloudc.PushConfigGetAllResp
	30, // 70: cloudc.CloudCService.SystemConfigSet:output_type -> cloudc.ConfigResp
	26, // 71: cloudc.CloudCService.SystemConfigGet:output_type -> cloudc.SystemConfigGetResp
	27, // 72: cloudc.CloudCService.SystemConfigGetAll:output_type -> cloudc.SystemConfigGetAllResp
	30, // 73: cloudc.CloudCService.CaptchaConfigSet:output_type -> cloudc.ConfigResp
	35, // 74: cloudc.CloudCService.CaptchaConfigGet:output_type -> cloudc.CaptchaConfigGetResp
	38, // 75: cloudc.CloudCService.CaptchaConfigGetAll:output_type -> cloudc.CaptchaConfigGetAllResp
	30, // 76: cloudc.CloudCService.DouyinConfigSet:output_type -> cloudc.ConfigResp
	34, // 77: cloudc.CloudCService.DouyinConfigGet:output_type -> cloudc.DouyinConfigGetResp
	33, // 78: cloudc.CloudCService.DouyinConfigGetAll:output_type -> cloudc.DouyinConfigGetAllResp
	30, // 79: cloudc.CloudCService.WechatConfigSet:output_type -> cloudc.ConfigResp
	31, // 80: cloudc.CloudCService.WechatConfigGet:output_type -> cloudc.WechatConfigGetResp
	32, // 81: cloudc.CloudCService.WechatConfigGetAll:output_type -> cloudc.WechatConfigGetAllResp
	30, // 82: cloudc.CloudCService.SmsConfigSet:output_type -> cloudc.ConfigResp
	40, // 83: cloudc.CloudCService.SmsConfigGet:output_type -> cloudc.SmsConfigGetResp
	41, // 84: cloudc.CloudCService.SmsConfigGetAll:output_type -> cloudc.SmsConfigGetAllResp
	30, // 85: cloudc.CloudCService.EmsConfigSet:output_type -> cloudc.ConfigResp
	43, // 86: cloudc.CloudCService.EmsConfigGet:output_type -> cloudc.EmsConfigGetResp
	44, // 87: cloudc.CloudCService.EmsConfigGetAll:output_type -> cloudc.EmsConfigGetAllResp
	30, // 88: cloudc.CloudCService.OssConfigSet:output_type -> cloudc.ConfigResp
	46, // 89: cloudc.CloudCService.OssConfigGet:output_type -> cloudc.OssConfigGetResp
	47, // 90: cloudc.CloudCService.OssConfigGetAll:output_type -> cloudc.OssConfigGetAllResp
	64, // [64:91] is the sub-list for method output_type
	37, // [37:64] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_cloudc_proto_init() }
func file_cloudc_proto_init() {
	if File_cloudc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloudc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelWechatConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelDouyinConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelSmsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelEmsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelOssConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelCaptchaConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatConfigSetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DouyinConfigSetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaConfigSetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsConfigSetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OssConfigSetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmsConfigSetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGetAllParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemConfigSetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelSystemConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushConfigSetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelPushConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlsConfigSetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlsConfigGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlsConfigGetAllResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlsConfigGetAllRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelSlsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushConfigGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushConfigGetAllResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushConfigGetAllRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemConfigGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemConfigGetAllResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemConfigGetAllRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatConfigGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatConfigGetAllResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DouyinConfigGetAllResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DouyinConfigGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaConfigGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatConfigGetAllRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DouyinConfigGetAllRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaConfigGetAllResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaConfigGetAllRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsConfigGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsConfigGetAllResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsConfigGetAllRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmsConfigGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmsConfigGetAllResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmsConfigGetAllRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OssConfigGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OssConfigGetAllResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OssConfigGetAllRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloudc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudc_proto_goTypes,
		DependencyIndexes: file_cloudc_proto_depIdxs,
		MessageInfos:      file_cloudc_proto_msgTypes,
	}.Build()
	File_cloudc_proto = out.File
	file_cloudc_proto_rawDesc = nil
	file_cloudc_proto_goTypes = nil
	file_cloudc_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: wechat.proto

package wechat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WebRedirectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Scope       string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	RedirectUri string `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	State       string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *WebRedirectReq) Reset() {
	*x = WebRedirectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebRedirectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebRedirectReq) ProtoMessage() {}

func (x *WebRedirectReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebRedirectReq.ProtoReflect.Descriptor instead.
func (*WebRedirectReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{0}
}

func (x *WebRedirectReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WebRedirectReq) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WebRedirectReq) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *WebRedirectReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type WebAutoRedirectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Scope       string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	RedirectUri string `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	State       string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	TempUrl     string `protobuf:"bytes,5,opt,name=temp_url,json=tempUrl,proto3" json:"temp_url,omitempty"`
}

func (x *WebAutoRedirectReq) Reset() {
	*x = WebAutoRedirectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebAutoRedirectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebAutoRedirectReq) ProtoMessage() {}

func (x *WebAutoRedirectReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebAutoRedirectReq.ProtoReflect.Descriptor instead.
func (*WebAutoRedirectReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{1}
}

func (x *WebAutoRedirectReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WebAutoRedirectReq) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WebAutoRedirectReq) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *WebAutoRedirectReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WebAutoRedirectReq) GetTempUrl() string {
	if x != nil {
		return x.TempUrl
	}
	return ""
}

type CodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CodeReq) Reset() {
	*x = CodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeReq) ProtoMessage() {}

func (x *CodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeReq.ProtoReflect.Descriptor instead.
func (*CodeReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{2}
}

func (x *CodeReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type TokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	AccessToken string `protobuf:"bytes,2,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	Openid      string `protobuf:"bytes,3,opt,name=Openid,proto3" json:"Openid,omitempty"`
	Lang        string `protobuf:"bytes,4,opt,name=Lang,proto3" json:"Lang,omitempty"`
}

func (x *TokenReq) Reset() {
	*x = TokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenReq) ProtoMessage() {}

func (x *TokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenReq.ProtoReflect.Descriptor instead.
func (*TokenReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{3}
}

func (x *TokenReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TokenReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *TokenReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *TokenReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type RefreshReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
}

func (x *RefreshReq) Reset() {
	*x = RefreshReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshReq) ProtoMessage() {}

func (x *RefreshReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshReq.ProtoReflect.Descriptor instead.
func (*RefreshReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{4}
}

func (x *RefreshReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RefreshReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type WebGetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Openid      string `protobuf:"bytes,2,opt,name=Openid,proto3" json:"Openid,omitempty"`
	AccessToken string `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
}

func (x *WebGetUserInfoReq) Reset() {
	*x = WebGetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebGetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebGetUserInfoReq) ProtoMessage() {}

func (x *WebGetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebGetUserInfoReq.ProtoReflect.Descriptor instead.
func (*WebGetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{5}
}

func (x *WebGetUserInfoReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WebGetUserInfoReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WebGetUserInfoReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type OaKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *OaKeyReq) Reset() {
	*x = OaKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaKeyReq) ProtoMessage() {}

func (x *OaKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaKeyReq.ProtoReflect.Descriptor instead.
func (*OaKeyReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{6}
}

func (x *OaKeyReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type WebRedirectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string               `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string               `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WebRedirectRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WebRedirectResp) Reset() {
	*x = WebRedirectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebRedirectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebRedirectResp) ProtoMessage() {}

func (x *WebRedirectResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebRedirectResp.ProtoReflect.Descriptor instead.
func (*WebRedirectResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{7}
}

func (x *WebRedirectResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WebRedirectResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WebRedirectResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WebRedirectResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WebRedirectResp) GetData() *WebRedirectRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebRedirectRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Url   string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	State string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *WebRedirectRespData) Reset() {
	*x = WebRedirectRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebRedirectRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebRedirectRespData) ProtoMessage() {}

func (x *WebRedirectRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebRedirectRespData.ProtoReflect.Descriptor instead.
func (*WebRedirectRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{8}
}

func (x *WebRedirectRespData) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WebRedirectRespData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *WebRedirectRespData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type WebAutoRedirectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WebAutoRedirectRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WebAutoRedirectResp) Reset() {
	*x = WebAutoRedirectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebAutoRedirectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebAutoRedirectResp) ProtoMessage() {}

func (x *WebAutoRedirectResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebAutoRedirectResp.ProtoReflect.Descriptor instead.
func (*WebAutoRedirectResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{9}
}

func (x *WebAutoRedirectResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WebAutoRedirectResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WebAutoRedirectResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WebAutoRedirectResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WebAutoRedirectResp) GetData() *WebAutoRedirectRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebAutoRedirectRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope       string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Url         string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	State       string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	RedirectUrl string `protobuf:"bytes,4,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *WebAutoRedirectRespData) Reset() {
	*x = WebAutoRedirectRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebAutoRedirectRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebAutoRedirectRespData) ProtoMessage() {}

func (x *WebAutoRedirectRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebAutoRedirectRespData.ProtoReflect.Descriptor instead.
func (*WebAutoRedirectRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{10}
}

func (x *WebAutoRedirectRespData) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WebAutoRedirectRespData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *WebAutoRedirectRespData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WebAutoRedirectRespData) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type CodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string        `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string        `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *CodeRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CodeResp) Reset() {
	*x = CodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeResp) ProtoMessage() {}

func (x *CodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeResp.ProtoReflect.Descriptor instead.
func (*CodeResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{11}
}

func (x *CodeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CodeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CodeResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CodeResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CodeResp) GetData() *CodeRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CodeRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken    string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ExpiresIn      int64  `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	RefreshToken   string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Openid         string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Scope          string `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	IsSnapshotuser int32  `protobuf:"varint,6,opt,name=isSnapshotuser,proto3" json:"isSnapshotuser,omitempty"`
	Unionid        string `protobuf:"bytes,7,opt,name=unionid,proto3" json:"unionid,omitempty"`
	Errcode        int32  `protobuf:"varint,8,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg         string `protobuf:"bytes,9,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *CodeRespData) Reset() {
	*x = CodeRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeRespData) ProtoMessage() {}

func (x *CodeRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeRespData.ProtoReflect.Descriptor instead.
func (*CodeRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{12}
}

func (x *CodeRespData) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CodeRespData) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *CodeRespData) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *CodeRespData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *CodeRespData) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *CodeRespData) GetIsSnapshotuser() int32 {
	if x != nil {
		return x.IsSnapshotuser
	}
	return 0
}

func (x *CodeRespData) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *CodeRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *CodeRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type UserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string            `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string            `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *UserInfoRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserInfoResp) Reset() {
	*x = UserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoResp) ProtoMessage() {}

func (x *UserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoResp.ProtoReflect.Descriptor instead.
func (*UserInfoResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{13}
}

func (x *UserInfoResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserInfoResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *UserInfoResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UserInfoResp) GetData() *UserInfoRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserInfoRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Openid     string   `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	Nickname   string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int64    `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string   `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`
	City       string   `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	Country    string   `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Headimgurl string   `protobuf:"bytes,8,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	Privilege  []string `protobuf:"bytes,9,rep,name=privilege,proto3" json:"privilege,omitempty"`
	Unionid    string   `protobuf:"bytes,10,opt,name=unionid,proto3" json:"unionid,omitempty"`
	Errcode    int32    `protobuf:"varint,11,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg     string   `protobuf:"bytes,12,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *UserInfoRespData) Reset() {
	*x = UserInfoRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoRespData) ProtoMessage() {}

func (x *UserInfoRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoRespData.ProtoReflect.Descriptor instead.
func (*UserInfoRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{14}
}

func (x *UserInfoRespData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UserInfoRespData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *UserInfoRespData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfoRespData) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserInfoRespData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UserInfoRespData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserInfoRespData) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserInfoRespData) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *UserInfoRespData) GetPrivilege() []string {
	if x != nil {
		return x.Privilege
	}
	return nil
}

func (x *UserInfoRespData) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *UserInfoRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *UserInfoRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type RefreshResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string           `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *RefreshRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RefreshResp) Reset() {
	*x = RefreshResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshResp) ProtoMessage() {}

func (x *RefreshResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshResp.ProtoReflect.Descriptor instead.
func (*RefreshResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{15}
}

func (x *RefreshResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RefreshResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RefreshResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *RefreshResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RefreshResp) GetData() *RefreshRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type RefreshRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ExpiresIn    int64  `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Openid       string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Scope        string `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	Errcode      int32  `protobuf:"varint,6,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg       string `protobuf:"bytes,7,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *RefreshRespData) Reset() {
	*x = RefreshRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRespData) ProtoMessage() {}

func (x *RefreshRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRespData.ProtoReflect.Descriptor instead.
func (*RefreshRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{16}
}

func (x *RefreshRespData) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RefreshRespData) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *RefreshRespData) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshRespData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *RefreshRespData) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *RefreshRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *RefreshRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type WebGetUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                  `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                  `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WebGetUserInfoRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WebGetUserInfoResp) Reset() {
	*x = WebGetUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebGetUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebGetUserInfoResp) ProtoMessage() {}

func (x *WebGetUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebGetUserInfoResp.ProtoReflect.Descriptor instead.
func (*WebGetUserInfoResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{17}
}

func (x *WebGetUserInfoResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WebGetUserInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WebGetUserInfoResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WebGetUserInfoResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WebGetUserInfoResp) GetData() *WebGetUserInfoRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebGetUserInfoRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid     string   `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	Nickname   string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int64    `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string   `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City       string   `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country    string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Headimgurl string   `protobuf:"bytes,7,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	Privilege  []string `protobuf:"bytes,8,rep,name=privilege,proto3" json:"privilege,omitempty"`
	Unionid    string   `protobuf:"bytes,9,opt,name=unionid,proto3" json:"unionid,omitempty"`
	Errcode    int32    `protobuf:"varint,10,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg     string   `protobuf:"bytes,11,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *WebGetUserInfoRespData) Reset() {
	*x = WebGetUserInfoRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebGetUserInfoRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebGetUserInfoRespData) ProtoMessage() {}

func (x *WebGetUserInfoRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebGetUserInfoRespData.ProtoReflect.Descriptor instead.
func (*WebGetUserInfoRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{18}
}

func (x *WebGetUserInfoRespData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *WebGetUserInfoRespData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetPrivilege() []string {
	if x != nil {
		return x.Privilege
	}
	return nil
}

func (x *WebGetUserInfoRespData) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *WebGetUserInfoRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type OaAccessTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                 `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *OaAccessTokenRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OaAccessTokenResp) Reset() {
	*x = OaAccessTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaAccessTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaAccessTokenResp) ProtoMessage() {}

func (x *OaAccessTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaAccessTokenResp.ProtoReflect.Descriptor instead.
func (*OaAccessTokenResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{19}
}

func (x *OaAccessTokenResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OaAccessTokenResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OaAccessTokenResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *OaAccessTokenResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OaAccessTokenResp) GetData() *OaAccessTokenRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type OaAccessTokenRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	ExpiresIn   int64  `protobuf:"varint,2,opt,name=ExpiresIn,proto3" json:"ExpiresIn,omitempty"`
	Errcode     int32  `protobuf:"varint,3,opt,name=Errcode,proto3" json:"Errcode,omitempty"`
	Errmsg      string `protobuf:"bytes,4,opt,name=Errmsg,proto3" json:"Errmsg,omitempty"`
}

func (x *OaAccessTokenRespData) Reset() {
	*x = OaAccessTokenRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaAccessTokenRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaAccessTokenRespData) ProtoMessage() {}

func (x *OaAccessTokenRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaAccessTokenRespData.ProtoReflect.Descriptor instead.
func (*OaAccessTokenRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{20}
}

func (x *OaAccessTokenRespData) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *OaAccessTokenRespData) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *OaAccessTokenRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *OaAccessTokenRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

var File_wechat_proto protoreflect.FileDescriptor

var file_wechat_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x22, 0x71, 0x0a, 0x0e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x57, 0x65,
	0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x22, 0x2f, 0x0a, 0x07,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x6a, 0x0a,
	0x08, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x22, 0x42, 0x0a, 0x0a, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5f, 0x0a,
	0x11, 0x57, 0x65, 0x62, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x1c,
	0x0a, 0x08, 0x4f, 0x61, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x9a, 0x01, 0x0a,
	0x0f, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x13, 0x57, 0x65, 0x62,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa2,
	0x01, 0x0a, 0x13, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x33,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x17, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22,
	0x8c, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97,
	0x02, 0x0a, 0x0c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x73,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xbe, 0x02, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d,
	0x67, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64,
	0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c,
	0x65, 0x67, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d,
	0x73, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67,
	0x22, 0x92, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd8, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d,
	0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67,
	0x22, 0xa0, 0x01, 0x0a, 0x12, 0x57, 0x65, 0x62, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xb2, 0x02, 0x0a, 0x16, 0x57, 0x65, 0x62, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x4f, 0x61, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4f, 0x61,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x4f, 0x61,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x49, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x49, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x45, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45,
	0x72, 0x72, 0x6d, 0x73, 0x67, 0x32, 0xa1, 0x03, 0x0a, 0x10, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x52, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x43, 0x6f,
	0x64, 0x65, 0x32, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0f, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x10, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x12, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10,
	0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x11, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x16, 0x2e, 0x77, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x57, 0x65, 0x62,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x15,
	0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x1a, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x57,
	0x65, 0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75,
	0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49,
	0x0a, 0x1a, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x2e, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4f, 0x61, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4f, 0x61, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wechat_proto_rawDescOnce sync.Once
	file_wechat_proto_rawDescData = file_wechat_proto_rawDesc
)

func file_wechat_proto_rawDescGZIP() []byte {
	file_wechat_proto_rawDescOnce.Do(func() {
		file_wechat_proto_rawDescData = protoimpl.X.CompressGZIP(file_wechat_proto_rawDescData)
	})
	return file_wechat_proto_rawDescData
}

var file_wechat_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_wechat_proto_goTypes = []interface{}{
	(*WebRedirectReq)(nil),          // 0: wechat.WebRedirectReq
	(*WebAutoRedirectReq)(nil),      // 1: wechat.WebAutoRedirectReq
	(*CodeReq)(nil),                 // 2: wechat.CodeReq
	(*TokenReq)(nil),                // 3: wechat.TokenReq
	(*RefreshReq)(nil),              // 4: wechat.RefreshReq
	(*WebGetUserInfoReq)(nil),       // 5: wechat.WebGetUserInfoReq
	(*OaKeyReq)(nil),                // 6: wechat.OaKeyReq
	(*WebRedirectResp)(nil),         // 7: wechat.WebRedirectResp
	(*WebRedirectRespData)(nil),     // 8: wechat.WebRedirectRespData
	(*WebAutoRedirectResp)(nil),     // 9: wechat.WebAutoRedirectResp
	(*WebAutoRedirectRespData)(nil), // 10: wechat.WebAutoRedirectRespData
	(*CodeResp)(nil),                // 11: wechat.CodeResp
	(*CodeRespData)(nil),            // 12: wechat.CodeRespData
	(*UserInfoResp)(nil),            // 13: wechat.UserInfoResp
	(*UserInfoRespData)(nil),        // 14: wechat.UserInfoRespData
	(*RefreshResp)(nil),             // 15: wechat.RefreshResp
	(*RefreshRespData)(nil),         // 16: wechat.RefreshRespData
	(*WebGetUserInfoResp)(nil),      // 17: wechat.WebGetUserInfoResp
	(*WebGetUserInfoRespData)(nil),  // 18: wechat.WebGetUserInfoRespData
	(*OaAccessTokenResp)(nil),       // 19: wechat.OaAccessTokenResp
	(*OaAccessTokenRespData)(nil),   // 20: wechat.OaAccessTokenRespData
}
var file_wechat_proto_depIdxs = []int32{
	8,  // 0: wechat.WebRedirectResp.data:type_name -> wechat.WebRedirectRespData
	10, // 1: wechat.WebAutoRedirectResp.data:type_name -> wechat.WebAutoRedirectRespData
	12, // 2: wechat.CodeResp.data:type_name -> wechat.CodeRespData
	14, // 3: wechat.UserInfoResp.data:type_name -> wechat.UserInfoRespData
	16, // 4: wechat.RefreshResp.data:type_name -> wechat.RefreshRespData
	18, // 5: wechat.WebGetUserInfoResp.data:type_name -> wechat.WebGetUserInfoRespData
	20, // 6: wechat.OaAccessTokenResp.data:type_name -> wechat.OaAccessTokenRespData
	2,  // 7: wechat.WechatRpcService.Code2Token:input_type -> wechat.CodeReq
	4,  // 8: wechat.WechatRpcService.RefreshUserToken:input_type -> wechat.RefreshReq
	3,  // 9: wechat.WechatRpcService.UserToken2UserInfo:input_type -> wechat.TokenReq
	0,  // 10: wechat.WechatRpcService.WebRedirectWechat:input_type -> wechat.WebRedirectReq
	1,  // 11: wechat.WechatRpcService.WebAutoRedirectWechat:input_type -> wechat.WebAutoRedirectReq
	6,  // 12: wechat.WechatRpcService.OfficialAccountAccessToken:input_type -> wechat.OaKeyReq
	11, // 13: wechat.WechatRpcService.Code2Token:output_type -> wechat.CodeResp
	15, // 14: wechat.WechatRpcService.RefreshUserToken:output_type -> wechat.RefreshResp
	13, // 15: wechat.WechatRpcService.UserToken2UserInfo:output_type -> wechat.UserInfoResp
	7,  // 16: wechat.WechatRpcService.WebRedirectWechat:output_type -> wechat.WebRedirectResp
	9,  // 17: wechat.WechatRpcService.WebAutoRedirectWechat:output_type -> wechat.WebAutoRedirectResp
	19, // 18: wechat.WechatRpcService.OfficialAccountAccessToken:output_type -> wechat.OaAccessTokenResp
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_wechat_proto_init() }
func file_wechat_proto_init() {
	if File_wechat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wechat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebRedirectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebAutoRedirectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebGetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OaKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebRedirectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebRedirectRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebAutoRedirectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebAutoRedirectRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebGetUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebGetUserInfoRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OaAccessTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OaAccessTokenRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wechat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wechat_proto_goTypes,
		DependencyIndexes: file_wechat_proto_depIdxs,
		MessageInfos:      file_wechat_proto_msgTypes,
	}.Build()
	File_wechat_proto = out.File
	file_wechat_proto_rawDesc = nil
	file_wechat_proto_goTypes = nil
	file_wechat_proto_depIdxs = nil
}
